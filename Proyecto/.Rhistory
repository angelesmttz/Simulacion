cadenas$x<-0
cadenas$y<-0
cadenas[1,]$x<-runif(1,0,l)
cadenas[1,]$y<-runif(1,0,l)
dimension<-2
colocar<-dim(cadenas)[1]
for (g in 2:colocar){
for (d in 1:dimension){
paso<-l/100
if(runif(1)< 0.5){paso<--paso}
cadenas[g,d+1]<-cadenas[g-1,d+1]+paso
}
print(round(g*100/colocar))
}
cadenas$x<-cadenas$x-min(cadenas$x)
cadenas$y<-cadenas$y-min(cadenas$y)
library(ggplot2)
polymer<-ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme_bw()
atomos.plata<-atomos.plata+40
Ag<- data.frame(x = runif(atomos.plata,min(cadenas$x),max(cadenas$x)),
y=runif(atomos.plata,min(cadenas$y),max(cadenas$y)))
polymer+
geom_point(data=Ag,aes(x=Ag$x,y=Ag$y),color="darkgoldenrod1")
save.image(file="P_C_Listo.RData")
R<- 8.3144598 #(Kg)(m^2)/(s^2)(k)(mol)
temp<-temperatura+273
mol.plata<- masa.plata*(10^-3)
Ag$Velocidad<- sqrt(3*R*temp/mol.plata)*10^-3 #m/s
Ag$Velocidad<- sqrt(3*R*temp/mol.plata) #m/s
u
r
max(cadenas)
cadenas$posibles<-0
radio<-0.5/100
for (u in 1:atomos.plata){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-atomos.plata[u,]$x-cadenas[r,]$x
dy<-atomos.plata[u,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
cadenas[r,]$posibles<-cadenas[r,]$posibles+1
}
}
}
}
for (u in 1:atomos.plata){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-atomos.plata[u,]$x-cadenas[r,]$x
dy<-atomos.plata[u,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
cadenas[r,]$posibles<-cadenas[r,]$posibles+1
}
}else{
cadenas[r,]$posibles<-cadenas[r,]$posibles
}
}
}
##### Condiciones ###
concentracion.cmc<-15 #mg/mL
volumen.cmc<-20 #mL
contenido.plata<-1 #mg
mw<-250*(10**3) #k(g/mol)
DS=1.2
temperatura<-90 #Centigrados
tiempo<-24 #horas
reduccion<-0.4*(10**-19)
## Calculos ###
avogrado<-6.023*(10**23) #avogrado
cmc<-volumen.cmc*concentracion.cmc  #g
moleculas.cmc<- round(avogrado*cmc*reduccion/mw)
plata<-contenido.plata*(10**-3) #gramos
masa.plata<-108 #g/mol
atomos.plata<- round(avogrado*plata*reduccion/masa.plata)
posiciones<-c(2,3,5)
polimerizacion<-function (){
base<-rep("P",7)
for (j in 1:length(posiciones)){
cation<-posiciones[j]
if (runif(1,0,1)<(DS/3)){
base[cation]<-"C"
}else{base[cation]<-"H"}
}
return(base)
}
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
polimero<-foreach(1:moleculas.cmc,.combine=c)%dopar%polimerizacion()
stopImplicitCluster()
l<-2
cadenas<-as.data.frame(polimero)
cadenas$x<-0
cadenas$y<-0
cadenas[1,]$x<-runif(1,0,l)
cadenas[1,]$y<-runif(1,0,l)
dimension<-2
colocar<-dim(cadenas)[1]
for (g in 2:colocar){
for (d in 1:dimension){
paso<-l/100
if(runif(1)< 0.5){paso<--paso}
cadenas[g,d+1]<-cadenas[g-1,d+1]+paso
}
print(round(g*100/colocar))
}
# Considerar que el polimero no es lineal si no ciclico
# Considerar la repulsi칩n electroest치tica de los grupos funcionales
cadenas$x<-cadenas$x-min(cadenas$x)
cadenas$y<-cadenas$y-min(cadenas$y)
library(ggplot2)
polymer<-ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme_bw()
atomos.plata<-atomos.plata+40
Ag<- data.frame(x = runif(atomos.plata,min(cadenas$x),max(cadenas$x)),
y=runif(atomos.plata,min(cadenas$y),max(cadenas$y)))
polymer+
geom_point(data=Ag,aes(x=Ag$x,y=Ag$y),color="darkgoldenrod1")
save.image(file="P_C_Listo.RData")
R<- 8.3144598 #(Kg)(m^2)/(s^2)(k)(mol)
temp<-temperatura+273
mol.plata<- masa.plata*(10^-3)
Ag$Velocidad<- sqrt(3*R*temp/mol.plata) #m/s
cadenas$posibles<-0
radio<-0.5/100
for (u in 1:atomos.plata){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-atomos.plata[u,]$x-cadenas[r,]$x
dy<-atomos.plata[u,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
cadenas[r,]$posibles<-cadenas[r,]$posibles+1
}
}else{
cadenas[r,]$posibles<-cadenas[r,]$posibles
}
}
}
atomos.plata
for (u in 1:atomos.plata){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-atomos.plata[u,]$x-cadenas[r,]$x
dy<-atomos.plata[u,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
cadenas[r,]$posibles<-cadenas[r,]$posibles+1
}
}else{
cadenas[r,]$posibles<-cadenas[r,]$posibles
}
}
}
for (u in 1:atomos.plata){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-Ag[u,]$x-cadenas[r,]$x
dy<-Ag[u,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
cadenas[r,]$posibles<-cadenas[r,]$posibles+1
}
}else{
cadenas[r,]$posibles<-cadenas[r,]$posibles
}
}
}
sum(cadenas$posibles)
cadenas$posibles<-0
radio<-0.5/100
for (u in 1:atomos.plata){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-Ag[u,]$x-cadenas[r,]$x
dy<-Ag[u,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
cadenas[r,]$posibles<-cadenas[r,]$posibles+1
}
}else break;
}
}
cadenas$posibles<-0
radio<-0.5/100
for (u in 1:atomos.plata){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-Ag[u,]$x-cadenas[r,]$x
dy<-Ag[u,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
cadenas[r,]$posibles<-cadenas[r,]$posibles+1
}else break;
}
}
}
p
while (plata.dis>0){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-Ag[plata.dis,]$x-cadenas[r,]$x
dy<-Ag[plata.dis,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
if (runif(1)<p){
cadenas[r,]$polimero<-"Ag"
plata.disp<-plata.disp<-1}
}
}
}
}
plata.dis<-atomos.plata
p<-0.5
while (plata.dis>0){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-Ag[plata.dis,]$x-cadenas[r,]$x
dy<-Ag[plata.dis,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
if (runif(1)<p){
cadenas[r,]$polimero<-"Ag"
plata.disp<-plata.disp<-1}
}
}
}
}
while (plata.dis>0){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-Ag[plata.dis,]$x-cadenas[r,]$x
dy<-Ag[plata.dis,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
if (runif(1)< p){
cadenas[r,]$polimero<-"Ag"
plata.disp<-plata.disp<-1}
}else{cadenas[r,]$polimero<-cadenas[r,]$polimero}
}else{cadenas[r,]$polimero<-cadenas[r,]$polimero}
}
}
while (plata.dis>0){
for (r in 1:colocar){
if (cadenas[r,]$polimero=="C"){
dx<-Ag[plata.dis,]$x-cadenas[r,]$x
dy<-Ag[plata.dis,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
if (runif(1)< p){
cadenas[r,]$polimero<-"Ag"
plata.disp<-plata.disp-1}else{
cadenas[r,]$polimero<-cadenas[r,]$polimero}
}else{cadenas[r,]$polimero<-cadenas[r,]$polimero}
}else{cadenas[r,]$polimero<-cadenas[r,]$polimero}
}
}
##### Condiciones ###
concentracion.cmc<-15 #mg/mL
volumen.cmc<-20 #mL
contenido.plata<-1 #mg
mw<-250*(10**3) #k(g/mol)
DS=1.2
temperatura<-90 #Centigrados
tiempo<-24 #horas
reduccion<-0.4*(10**-17)
## Calculos ###
avogrado<-6.023*(10**23) #avogrado
cmc<-volumen.cmc*concentracion.cmc  #g
moleculas.cmc<- round(avogrado*cmc*reduccion/mw)
plata<-contenido.plata*(10**-3) #gramos
masa.plata<-108 #g/mol
atomos.plata<- round(avogrado*plata*reduccion/masa.plata)
posiciones<-c(2,3,5)
polimerizacion<-function (){
base<-rep(NA,7)
for (j in 1:length(posiciones)){
cation<-posiciones[j]
if (runif(1,0,1)<(DS/3)){
base[cation]<-0
}#else{base[cation]<-"H"}
}
return(base)
}
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
polimero<-foreach(1:moleculas.cmc,.combine=c)%dopar%polimerizacion()
stopImplicitCluster()
l<-2
cadenas<-as.data.frame(polimero)
cadenas$x<-0
cadenas$y<-0
cadenas[1,]$x<-runif(1,0,l)
cadenas[1,]$y<-runif(1,0,l)
dimension<-2
colocar<-dim(cadenas)[1]
for (g in 2:colocar){
for (d in 1:dimension){
paso<-l/100
if(runif(1)< 0.5){paso<--paso}
cadenas[g,d+1]<-cadenas[g-1,d+1]+paso
}
print(round(g*100/colocar))
}
# Considerar que el polimero no es lineal si no ciclico
# Considerar la repulsi칩n electroest치tica de los grupos funcionales
cadenas$x<-cadenas$x-min(cadenas$x)
cadenas$y<-cadenas$y-min(cadenas$y)
library(ggplot2)
polymer<-ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme_bw()
atomos.plata<-atomos.plata+40
Ag<- data.frame(x = runif(atomos.plata,min(cadenas$x),max(cadenas$x)),
y=runif(atomos.plata,min(cadenas$y),max(cadenas$y)))
polymer+
geom_point(data=Ag,aes(x=Ag$x,y=Ag$y),color="darkgoldenrod1")
ggsave("Inicial.png")
#save.image(file="P_C_Listo.RData")
##############Velocidad####
R<- 8.3144598 #(Kg)(m^2)/(s^2)(k)(mol)
T.k<-temperatura+273
mol.plata<- masa.plata*(10^-3)
k<- 1.38 *(10**-23) #J/K
Ag.v<- sqrt(3*R*T.k/mol.plata) #m/s
KE<- (3/2)*k*T.k
forma<-function(T.k){
Energy<-(3/2)*k*T.k
return(2*Energy/mol.plata)
}
speed<-foreach(T.k=0:1000,.combine = c)%dopar% forma(T.k)
curva<-data.frame(T.e=c(0:1000),Velocidad=speed)
################Union####
radio<-0.005
p<-0.5
Ag$estado<-"F"
condicional<-matrix(FALSE,ncol=atomos.plata,nrow=colocar)
for (r in 1:colocar){
if (is.na(cadenas[r,]$polimero)){
cadenas[r,]$polimero<-cadenas[r,]$polimero
}else{
for (u in 1:atomos.plata){
if (Ag$estado=="F"){
dx<-Ag[u,]$x-cadenas[r,]$x
dy<-Ag[u,]$x-cadenas[r,]$x
d<- sqrt(dx^2 + dy^2)
if (d<radio){
if (runif(1)<p){
condicional[r,u]<-TRUE
cadenas[r,]$polimero<-cadenas[r,]$polimero+1
Ag[u,]$estado<-"O"
Ag[u,]$x<-cadenas[r,]$x
Ag[u,]$y<-cadenas[r,]$y
}
}
}
}
}
}
polymer+
geom_point(data=Ag,aes(x=Ag$x,y=Ag$y),color="darkgoldenrod1")
ggsave("Paso.png")
##### Condiciones ###
concentracion.cmc<-15 #mg/mL
volumen.cmc<-20 #mL
contenido.plata<-1 #mg
mw<-250*(10**3) #k(g/mol)
DS=1.2
temperatura<-90 #Centigrados
tiempo<-24 #horas
reduccion<-0.4*(10**-17)
## Calculos ###
avogrado<-6.023*(10**23) #avogrado
cmc<-volumen.cmc*concentracion.cmc  #g
moleculas.cmc<- round(avogrado*cmc*reduccion/mw)
plata<-contenido.plata*(10**-3) #gramos
masa.plata<-108 #g/mol
atomos.plata<- round(avogrado*plata*reduccion/masa.plata)
posiciones<-c(2,3,5)
polimerizacion<-function (){
base<-rep(NA,7)
for (j in 1:length(posiciones)){
cation<-posiciones[j]
if (runif(1,0,1)<(DS/3)){
base[cation]<-0
}#else{base[cation]<-"H"}
}
return(base)
}
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
polimero<-foreach(1:moleculas.cmc,.combine=c)%dopar%polimerizacion()
stopImplicitCluster()
l<-2
cadenas<-as.data.frame(polimero)
cadenas$x<-0
cadenas$y<-0
cadenas[1,]$x<-runif(1,0,l)
cadenas[1,]$y<-runif(1,0,l)
dimension<-2
colocar<-dim(cadenas)[1]
for (g in 2:colocar){
for (d in 1:dimension){
paso<-l/100
if(runif(1)< 0.5){paso<--paso}
cadenas[g,d+1]<-cadenas[g-1,d+1]+paso
}
print(round(g*100/colocar))
}
# Considerar que el polimero no es lineal si no ciclico
# Considerar la repulsi칩n electroest치tica de los grupos funcionales
cadenas$x<-cadenas$x-min(cadenas$x)
cadenas$y<-cadenas$y-min(cadenas$y)
library(ggplot2)
polymer<-ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme_bw()
polymer
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme_void()
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme_void(base_size = 10)
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid",
colour = "black"))
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme_bw(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "#BFD5E3"))
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
guides(fill=guide_legend(title="치tomos de plata"))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "#BFD5E3"))
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
scale_fill_discrete(name = "New Legend")+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "#BFD5E3"))
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")+
guides(fill=guide_legend(title="title"))
ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
scale_color_manual(values=c("#999999", "#E69F00"))+
xlab("x")+ylab("y")
source('~/GitHub/Simulacion/Simulacion/Proyecto/Paralelo.R', echo=TRUE)
T
t
source('~/GitHub/Simulacion/Simulacion/Proyecto/Polimero_carboxilos.R', echo=TRUE)
source('~/GitHub/Simulacion/Simulacion/Proyecto/Polimero_carboxilos.R', echo=TRUE)
ggplot(data=nucleos,aes(nucleos$Cantidad))+
geom_histogram(bins=50, color = "black", fill = "gray")+
ylab("Frecuencia")+
xlab("\u{00C1}tomos de plata")+
ggtitle(paste(contenido.plata, " mg de plata"))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"))
ggsave (paste("Simulado_",contenido.plata,".png"))
ggplot(data=nucleos,aes(nucleos$Cantidad))+
geom_histogram(bins=50, color = "black", fill = "gray")+
ylab("Frecuencia")+
xlab("\u{00C1}tomos de plata")+
ggtitle(paste(contenido.plata, " mg de plata"))+
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_rect(fill = "white"))
ggsave (paste("Simulado_",contenido.plata,".png"))
