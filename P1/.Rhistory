repetir <- 300
duracion <- 200
eucl <-  FALSE
ciclos<-20
resultados <-  data.frame()
for (replicas in 1:ciclos){
for (dimension in 1:8) {
origen<-rep(0,dimension)
regreso<-rep(FALSE,repetir)
for (r in 1:repetir){
pos <- rep(0, dimension)
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio <- 1
if (runif(1) < 0.5) {
cambio <- -1}
pos[cambiar] <- pos[cambiar] + cambio}
if(all(pos==origen)){
regreso[r]<-TRUE}
}
datos <- cbind(replicas, dimension, sum(regreso))
resultados<-rbind(resultados,datos)
}
}
npos<- function(r) {
pos <- rep(0, dimension)
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio<-1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if(all(pos==origen)){
return(TRUE)}else{return(FALSE)}
}
repetir<-200
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
datos <-  data.frame()
for(replica in 1:15){
for (duracion in seq(100,400,100)){
for (dimension in 1:8){
origen<-rep(0,dimension)
ti<-Sys.time()
regreso <- foreach(r=1:repetir,.combine=c)%dopar% npos(r)
tf<-Sys.time()
t<-difftime(tf,ti,units="secs")
res<-cbind(replica,duracion,dimension,t)
datos <- rbind(datos, res)
}
}
}
rm(list=ls())
npos<- function(r) {
pos <- rep(0, dimension)
for (t in 1:duracion) {
cambiar <- sample(1:dimension, 1)
cambio<-1
if (runif(1) < 0.5) {
cambio <- -1
}
pos[cambiar] <- pos[cambiar] + cambio
}
if(all(pos==origen)){
return(TRUE)}else{return(FALSE)}
}
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
datos <-  data.frame()
for (replica in 1:7){
for (duracion in seq(100,400,100)){
for(repetir in seq(100,400,100)){
for (dimension in 1:8) {
origen<-rep(0,dimension)
regreso <- foreach(r=1:repetir,.combine=c)%dopar% npos(r)
res<-cbind(replica,duracion,repetir,dimension,sum(regreso))
datos <- rbind(datos, res)
}
}
}
}
