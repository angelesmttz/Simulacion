assert(n == length(valor))
vt <- sum(valor)
if (pt < cap) {
return(vt)
} else {
filas <- cap + 1
cols <- n + 1
tabla <- matrix(rep(-Inf, filas * cols),
nrow = filas, ncol = cols)
for (fila in 1:filas) {
tabla[fila, 1] <- 0
}
rownames(tabla) <- 0:cap
colnames(tabla) <- c(0, valor)
for (objeto in 1:n) {
for (acum in 1:(cap+1)) { # consideramos cada fila de la tabla
anterior <- acum - peso[objeto]
if (anterior > 0) { # si conocemos una combinacion con ese peso
tabla[acum, objeto + 1] <- max(tabla[acum, objeto], tabla[anterior, objeto] + valor[objeto])
}
}
}
return(max(tabla))
}
}
factible <- function(seleccion, pesos, capacidad) {
return(sum(seleccion * pesos) <= capacidad)
}
objetivo <- function(seleccion, valores) {
return(sum(seleccion * valores))
}
normalizar <- function(data) {
menor <- min(data)
mayor <- max(data)
rango <- mayor - menor
data <- data - menor # > 0
return(data / rango) # entre 0 y 1
}
generador.pesos <- function(cuantos, min, max) {
return(sort(round(normalizar(rnorm(cuantos)) * (max - min) + min)))
}
generador.valores <- function(pesos, min, max) {
n <- length(pesos)
valores <- double()
for (i in 1:n) {
media <- pesos[n]
desv <- runif(1)
valores <- c(valores, rnorm(1, media, desv))
}
valores <- normalizar(valores) * (max - min) + min
return(valores)
}
poblacion.inicial <- function(n, tam) {
pobl <- matrix(rep(FALSE, tam * n), nrow = tam, ncol = n)
for (i in 1:tam) {
pobl[i,] <- round(runif(n))
}
return(as.data.frame(pobl))
}
mutacion <- function(sol, n) {
pos <- sample(1:n, 1)
mut <- sol
mut[pos] <- (!sol[pos]) * 1
return(mut)
}
reproduccion <- function(x, y, n) {
pos <- sample(2:(n-1), 1)
xy <- c(x[1:pos], y[(pos+1):n])
yx <- c(y[1:pos], x[(pos+1):n])
return(c(xy, yx))
}
para.mut<-function(i){
if (runif(1) < pm) {
return(unlist(mutacion(p[i,],n)))
}
}
para.rep.m<-function(i){
padres <- sample(1:tam, 2, prob=elites,replace=TRUE)
hijos <- reproduccion(p[padres[1],], p[padres[2],], n)
p.hijo<- hijos[1:n] # primer hijo
s.hijo<- hijos[(n+1):(2*n)] # segundo hijo
son<-rbind(p.hijo,s.hijo)
return(son)
}
para.obj<-function(i){
obj <- objetivo(p[i,], valores)
fact <-factible(p[i,], pesos, capacidad)
datos<-cbind(obj,fact)
return(datos)
}
n <- 50
pesos <- generador.pesos(n, 15, 80)
valores <- generador.valores(pesos, 10, 500)
capacidad <- round(sum(pesos) * 0.65)
optimo <- knapsack(capacidad, pesos, valores)
pm <- 0.05
rep <- 50
resultados<-data.frame()
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
for (replicas in 1:5){
p <- poblacion.inicial(n, init)
tam <- dim(p)[1]
assert(tam == init)
mejores <- double()
for (iter in 1:tmax) {
p$obj <- NULL
p$fact <- NULL
p<-rbind(p,foreach(i=1:tam,.combine = rbind)%dopar% para.mut(i))
elites<-foreach(i=1:tam,.combine = c)%dopar% objetivo(p[i,], valores)
elites <- elites / sum(elites)
p<-rbind(p,foreach(i=1:rep,combine=rbind)%dopar% para.rep.m(i))
tam <- dim(p)[1]
obj <- double()
fact <- integer()
p<- data.frame(sapply(p, function(x) as.numeric(as.character(x))))
p<-cbind(p,foreach(i=1:tam,.combine=rbind)%dopar% para.obj(i))
mantener <- order(-p[, (n + 2)], -p[, (n + 1)])[1:init]
p <- p[mantener,]
tam <- dim(p)[1]
assert(tam == init)
factibles <- p[p$fact == TRUE,]
mejor <- max(factibles$obj)
mejores <- c(mejores, mejor)
}
datos<-cbind(replicas,mejores,c(1:tmax))
resultados<-rbind(resultados,datos)
print(replicas)
}
stopImplicitCluster()
#save.image(file="Reto1.RData")
para.rep<-function(i){
padres <- sample(1:tam, 2,replace=TRUE)
hijos <- reproduccion(p[padres[1],], p[padres[2],], n)
p.hijo<- hijos[1:n] # primer hijo
s.hijo<- hijos[(n+1):(2*n)] # segundo hijo
son<-rbind(p.hijo,s.hijo)
return(son)
}
source('~/GitHub/Simulacion/Simulacion/P10/Cod_P10_T10.R')
tarea<-cbind(mejores,c(1:tmax))
tarea<-as.data.frame(tarea)
colnames(tarea)<-c("Valores","Paso")
library(ggplot2)
png("Seleccion_ruleta_100.png")
ggplot()+
geom_line(data=resultados,aes(x=resultados$Paso,y=resultados$Valores,color=resultados$Replica),size=0.6,linetype="F1")+
geom_hline(yintercept=optimo, linetype="dashed", color = "darkgreen",size=0.6)+
geom_line(data=tarea,aes(x=tarea$Paso,y=tarea$Valores,color="black"),size=0.6)+
xlab("Paso")+   ylab("Valores")+
scale_color_manual(name = "Selecci贸n", values = c("deepskyblue","deepskyblue1",
"darkgoldenrod2","firebrick3","darkorchid","black"),
labels =c("Ruleta1", "Ruleta2","Ruleta3","Ruleta4","Ruleta5","Original")) +
guides(color = guide_legend(order = 1))
dev.off()
resultados
tarea
ggplot()+
geom_line(data=resultados,aes(x=resultados$Paso,y=resultados$Valores,color=resultados$Replica),size=0.6,linetype="F1")+
geom_hline(yintercept=optimo, linetype="dashed", color = "darkgreen",size=0.6)+
geom_line(data=tarea,aes(x=tarea$Paso,y=tarea$Valores,color="black"),size=0.6)+
xlab("Paso")+   ylab("Valores")+
scale_color_manual(name = "Selecci贸n", values = c("deepskyblue","deepskyblue1",
"darkgoldenrod2","firebrick3","darkorchid","black"),
labels =c("Ruleta1", "Ruleta2","Ruleta3","Ruleta4","Ruleta5","Original")) +
guides(color = guide_legend(order = 1))
colnames(resultados)<-c("Replica","Valores","Paso")
resultados$Replica<-as.factor(resultados$Replica)
ggplot()+
geom_line(data=resultados,aes(x=resultados$Paso,y=resultados$Valores,color=resultados$Replica),size=0.6,linetype="F1")+
geom_hline(yintercept=optimo, linetype="dashed", color = "darkgreen",size=0.6)+
geom_line(data=tarea,aes(x=tarea$Paso,y=tarea$Valores,color="black"),size=0.6)+
xlab("Paso")+   ylab("Valores")+
scale_color_manual(name = "Selecci贸n", values = c("deepskyblue","deepskyblue1",
"darkgoldenrod2","firebrick3","darkorchid","black"),
labels =c("Ruleta1", "Ruleta2","Ruleta3","Ruleta4","Ruleta5","Original")) +
guides(color = guide_legend(order = 1))
png("Seleccion_ruleta_100.png")
ggplot()+
geom_line(data=resultados,aes(x=resultados$Paso,y=resultados$Valores,color=resultados$Replica),size=0.6,linetype="F1")+
geom_hline(yintercept=optimo, linetype="dashed", color = "darkgreen",size=0.6)+
geom_line(data=tarea,aes(x=tarea$Paso,y=tarea$Valores,color="black"),size=0.6)+
xlab("Paso")+   ylab("Valores")+
scale_color_manual(name = "Selecci贸n", values = c("deepskyblue","deepskyblue1",
"darkgoldenrod2","firebrick3","darkorchid","black"),
labels =c("Ruleta1", "Ruleta2","Ruleta3","Ruleta4","Ruleta5","Original")) +
guides(color = guide_legend(order = 1))
dev.off()
save.image(file="R1_100.RData")
rm(list=ls())
load("~/GitHub/Simulacion/Simulacion/P10/Optimos.RData")
colnames(resultados)<-c("Tipo","Replica","Valores","Paso")
res.p<-resultados[resultados$Tipo == "paralelo",]
res.p
res.o<-resultados[resultados$Tipo == "original",]
colnames(resultados)<-c("Tipo","Replica","Valores","Paso")
resultados$Replica<- as.factor(resultados$Replica)
resultados$Valores <- as.numeric(levels(resultados$Valores))[resultados$Valores]
res.p<-resultados[resultados$Tipo == "paralelo",]
res.o<-resultados[resultados$Tipo == "original",]
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+
ylab("Valores")
resultados$Paso <- as.numeric(levels(resultados$Paso))[resultados$Paso]
res.p<-resultados[resultados$Tipo == "paralelo",]
res.o<-resultados[resultados$Tipo == "original",]
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+
ylab("Valores")
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+
ylab("Valores")
ggplot()+
geom_poin(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,shape=res.o$Replica))+
geom_poin(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,shape=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+
ylab("Valores")
ggplot()+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,shape=res.o$Replica))+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,shape=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+
ylab("Valores")
ggplot()+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,shape=res.o$Replica),color=c(1,2,3))+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,shape=res.p$Replica),color=c(4,5,6))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+
ylab("Valores")
library(ggplot2)
ggplot()+
geom_poin(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
scale_color_manual(name = "Tipo", values = c("dodgerblue3","deepskyblue1",
"royalblue4","deeppink4","deeppink","deeppink2"),
labels =c("Original 1","Original 2","Original 3","Paralelo 1",
"Paralelo 2","Paralelo 3")) +
guides(color = guide_legend(order = 1))
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
scale_color_manual(name = "Tipo", values = c("dodgerblue3","deepskyblue1",
"royalblue4","deeppink4","deeppink","deeppink2"),
labels =c("Original 1","Original 2","Original 3","Paralelo 1",
"Paralelo 2","Paralelo 3")) +
guides(color = guide_legend(order = 1))
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,shape=res.o$Replica))
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores),shape=1)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=2)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=4)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,fill=res.o$Replica),shape=2)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape="a")
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),color="pink")+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape="a")
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape="a")
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape="a")+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape="c")
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=23)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16,size=0.5)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15,size=0.5)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16,size=0.8)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15,size=0.8)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15)
scale_shape_manual(name = "Tipo", labels =c("Original", "Paralelo")) +
guides(shape = guide_legend(order = 1))
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15)
scale_shape_manual(name = "Tipo", labels =c("Original", "Paralelo")) +
guides(color=FALSE)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15)
guides(color=FALSE)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15)
guides(colour=FALSE)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "green",size=0.5)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15)+
guides(color=FALSE)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "black",size=0.8)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15)+
guides(color=FALSE)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "black",size=0.8)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica),shape=16)+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica),shape=15)+
guides(color=FALSE,shape=TRUE)
ggplot()+
geom_line(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,color=res.o$Replica))+
geom_line(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,color=res.p$Replica))+
geom_hline(yintercept=optimo, linetype="dashed", color = "black",size=0.8)+
xlab("Paso")+  ylab("Valores")+
geom_point(data=res.o,aes(x=res.o$Paso,y=res.o$Valores,shape=res.o$Replica))+
geom_point(data=res.p,aes(x=res.p$Paso,y=res.p$Valores,shaper=res.p$Replica))+
guides(color=FALSE,shape=TRUE)
resultados
rm(list=ls())
rm(list=ls())
colnames(resultados)<-c("Tipo","Replica","Valores","Paso")
resultados$Replica<- as.factor(resultados$Replica)
resultados$Tipo<- as.factor(resultados$Tipo)
resultados$Valores <- as.numeric(levels(resultados$Valores))[resultados$Valores]
resultados$Paso <- as.numeric(levels(resultados$Paso))[resultados$Paso]
resultados<-resultados[resultados$Replica == "3",]
load("~/GitHub/Simulacion/Simulacion/P10/Optimos.RData")
colnames(resultados)<-c("Tipo","Replica","Valores","Paso")
resultados$Replica<- as.factor(resultados$Replica)
resultados$Tipo<- as.factor(resultados$Tipo)
resultados$Valores <- as.numeric(levels(resultados$Valores))[resultados$Valores]
resultados$Paso <- as.numeric(levels(resultados$Paso))[resultados$Paso]
resultados<-resultados[resultados$Replica == "3",]
ggplot()+
geom_line(data=resultados,aes(x=resultados$Paso,y=resultados$Valores,color=resultados$Tipo))+
geom_hline(yintercept=optimo, linetype="dashed", color = "black",size=0.8)+
xlab("Paso")+  ylab("Valores")
ggplot()+
geom_line(data=resultados,aes(x=resultados$Paso,y=resultados$Valores,color=Tipo))+
geom_hline(yintercept=optimo, linetype="dashed", color = "black",size=0.8)+
xlab("Paso")+  ylab("Valores")
setwd("~/GitHub/Simulacion/Simulacion/P10")
png("Grafico_optimo.png")
ggplot()+
geom_line(data=resultados,aes(x=resultados$Paso,y=resultados$Valores,color=Tipo))+
geom_hline(yintercept=optimo, linetype="dashed", color = "black",size=0.8)+
xlab("Paso")+  ylab("Valores")
dev.off()
library(ggplot2)
png("Grafico_optimo.png")
ggplot()+
geom_line(data=resultados,aes(x=resultados$Paso,y=resultados$Valores,color=Tipo))+
geom_hline(yintercept=optimo, linetype="dashed", color = "black",size=0.8)+
xlab("Paso")+  ylab("Valores")+
theme(axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
plot.title=element_text(size=14),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
dev.off()
png("Grafico_optimo.png")
ggplot()+
geom_line(data=resultados,aes(x=resultados$Paso,y=resultados$Valores,color=Tipo))+
geom_hline(yintercept=optimo, linetype="dashed", color = "black",size=0.8)+
xlab("Paso")+  ylab("Valores")+
theme(axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14),
axis.title.x = element_text(size=1),
axis.title.y = element_text(size=14))
dev.off()
png("Grafico_optimo.png")
ggplot()+
geom_line(data=resultados,aes(x=resultados$Paso,y=resultados$Valores,color=Tipo))+
geom_hline(yintercept=optimo, linetype="dashed", color = "black",size=0.8)+
xlab("Paso")+  ylab("Valores")+
theme(axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14),
axis.title.x = element_text(size=1),
axis.title.y = element_text(size=14),
legend.text=element_text(size=14))
dev.off()
resultados<-resultados[resultados$Replica == "3",]
resultados
load("~/GitHub/Simulacion/Simulacion/P10/Optimos.RData")
colnames(resultados)<-c("Tipo","Replica","Valores","Paso")
resultados$Replica<- as.factor(resultados$Replica)
resultados$Tipo<- as.factor(resultados$Tipo)
resultados$Valores <- as.numeric(levels(resultados$Valores))[resultados$Valores]
resultados$Paso <- as.numeric(levels(resultados$Paso))[resultados$Paso]
resultados<-resultados[resultados$Replica == "3",]
resultados
rm(list=ls())
load("~/GitHub/Simulacion/Simulacion/P10/Optimos.RData")
colnames(resultados)<-c("Tipo","Replica","Valores","Paso")
resultados$Valores<-as.numeric(levels(resultados$Valores))[resultados$Valores]
resultados[resultados$Replica==1
,`]`
resultados[resultados$Replica==1,]
for (replicas in 1:ciclos){
prueba.par<-resultados[resultados$Replica==replicas& resultados$Tipo=="paralelo",]
prueba.org<-resultados[resultados$Replica==replicas & resultados$Tipo=="original",]
dat.par<-prueba.par$Valores
dat.org<-prueba.org$Valores
test<-t.test(dat.org,dat.par)
print(test)
}
rm(list=ls())
load("C:/Users/angel/Documents/GitHub/Simulacion/Simulacion/P10/Reto1.RData")
resultados
tarea
elites
min(elites)
max(elites)
100*min(elites)
test<-t.test(min(elites),max(elites))
